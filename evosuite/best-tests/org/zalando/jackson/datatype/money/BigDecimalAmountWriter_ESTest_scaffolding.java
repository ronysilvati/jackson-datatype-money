/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Feb 26 14:46:41 GMT 2020
 */

package org.zalando.jackson.datatype.money;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class BigDecimalAmountWriter_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.zalando.jackson.datatype.money.BigDecimalAmountWriter"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "Cp1252"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\ronys\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "BR"); 
    java.lang.System.setProperty("user.dir", "C:\\Users\\ronys\\git\\jackson-datatype-money"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\ronys"); 
    java.lang.System.setProperty("user.language", "pt"); 
    java.lang.System.setProperty("user.name", "ronys"); 
    java.lang.System.setProperty("user.timezone", ""); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BigDecimalAmountWriter_ESTest_scaffolding.class.getClassLoader() ,
      "org.zalando.jackson.datatype.money.AmountWriter",
      "org.zalando.jackson.datatype.money.DecimalAmountWriter",
      "org.zalando.jackson.datatype.money.BigDecimalAmountWriter"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BigDecimalAmountWriter_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apiguardian.api.API$Status",
      "org.zalando.jackson.datatype.money.DecimalAmountWriter",
      "org.javamoney.moneta.DefaultMonetaryContextFactory",
      "org.javamoney.moneta.spi.MonetaryConfig",
      "org.javamoney.moneta.ToStringMonetaryAmountFormat",
      "org.javamoney.moneta.Money",
      "org.javamoney.moneta.internal.PriorityAwareServiceProvider",
      "org.javamoney.moneta.RoundedMoney",
      "org.javamoney.moneta.spi.AbstractRateProvider",
      "org.javamoney.moneta.spi.CompoundRateProvider",
      "org.javamoney.moneta.internal.DefaultMonetaryCurrenciesSingletonSpi",
      "org.javamoney.moneta.internal.JDKCurrencyAdapter",
      "org.javamoney.moneta.internal.JDKCurrencyProvider",
      "org.javamoney.moneta.internal.ConfigurableCurrencyUnitProvider",
      "org.javamoney.moneta.FastMoney",
      "org.javamoney.moneta.spi.DefaultNumberValue",
      "org.javamoney.moneta.spi.ConvertNumberValue$ConvertNumberValueBigDecimal",
      "org.javamoney.moneta.spi.ConvertNumberValue$ConvertNumberValueBigInteger",
      "org.javamoney.moneta.spi.ConvertNumberValue$ConvertNumberValueFloat",
      "org.javamoney.moneta.spi.ConvertNumberValue$ConvertNumberValueDouble",
      "org.javamoney.moneta.spi.ConvertNumberValue$ConvertNumberValueLong",
      "org.javamoney.moneta.spi.ConvertNumberValue$ConvertNumberValueInteger",
      "org.javamoney.moneta.spi.ConvertNumberValue$ConvertNumberValueShort",
      "org.javamoney.moneta.spi.ConvertNumberValue$ConvertNumberValueByte",
      "org.javamoney.moneta.spi.ConvertNumberValue$ConvertNumberValueAtomicInteger",
      "org.javamoney.moneta.spi.ConvertNumberValue$ConvertNumberValueAtomicLong",
      "org.javamoney.moneta.spi.ConvertNumberValue",
      "org.javamoney.moneta.spi.ConvertBigDecimal",
      "org.javamoney.moneta.spi.MoneyUtils",
      "org.javamoney.moneta.NumberVerifier",
      "org.javamoney.moneta.RoundedMoneyMonetaryOperatorFactory",
      "org.javamoney.moneta.function.PrecisionContextRoundedOperator",
      "org.javamoney.moneta.internal.DefaultRoundingProvider",
      "org.javamoney.moneta.internal.DefaultRounding",
      "org.javamoney.moneta.spi.AbstractAmountFactory",
      "org.javamoney.moneta.internal.RoundedMoneyAmountFactory",
      "org.javamoney.moneta.spi.AbstractCurrencyConversion",
      "org.javamoney.moneta.spi.LazyBoundCurrencyConversion",
      "org.javamoney.moneta.internal.FastMoneyAmountFactory"
    );
  }
}
